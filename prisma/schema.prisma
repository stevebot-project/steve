generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Feedback {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  timestamp DateTime
  user      String

  @@map("feedback")
}

model Guild {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  id_               String    @unique @map("id") // snowflake
  channels          Channels?
  deletePinMessages Boolean   @default(false)
  logEvents         LogEvents
  roles             Roles?
  snippets          Snippet[]

  // TODO: investigate creating an index on Atlas for this
  @@unique([id_, snippets.name])
  @@map("guilds")
}

type Channels {
  memberlog       String?
  reminderChannel String?
  serverlog       String?
}

type LogEvents {
  channelCreate     Boolean @default(true)
  channelDelete     Boolean @default(true)
  channelUpdate     Boolean @default(true)
  emojiCreate       Boolean @default(true)
  emojiDelete       Boolean @default(true)
  emojiUpdate       Boolean @default(true)
  guildBanAdd       Boolean @default(true)
  guildBanRemove    Boolean @default(true)
  guildMemberAdd    Boolean @default(true)
  guildMemberRemove Boolean @default(true)
  guildMemberUpdate Boolean @default(true)
  inviteCreate      Boolean @default(true)
  inviteDelete      Boolean @default(true)
  messageDelete     Boolean @default(true)
  messageDeleteBulk Boolean @default(true)
  roleCreate        Boolean @default(true)
  roleDelete        Boolean @default(true)
  roleUpdate        Boolean @default(true)
}

type Roles {
  administrator String?
  assignable    String[]
  deafened      String?
  moderator     String?
  muted         String?
  restricted    String[]
  trusted       String?
}

type Snippet {
  name    String
  content String
  embed   Boolean @default(false)
}
