import { ModerationCase } from '@lib/structures/ModerationCases';

declare module 'klasa' {
	export interface LanguageKeys {
		DEFAULT: (key: string) => string;
		DEFAULT_LANGUAGE: string;
		PREFIX_REMINDER: (prefix: string) => string;
		SETTING_GATEWAY_EXPECTS_GUILD: string;
		SETTING_GATEWAY_VALUE_FOR_KEY_NOEXT: (data: any, key: any) => string;
		SETTING_GATEWAY_VALUE_FOR_KEY_ALREXT: (data: any, key: any) => string;
		SETTING_GATEWAY_SPECIFY_VALUE: string;
		SETTING_GATEWAY_KEY_NOT_ARRAY: (key: any) => string;
		SETTING_GATEWAY_KEY_NOEXT: (key: any) => string;
		SETTING_GATEWAY_INVALID_TYPE: string;
		SETTING_GATEWAY_INVALID_FILTERED_VALUE: (piece: any, value: any) => string;
		RESOLVER_MULTI_TOO_FEW: (name: string, min: number) => string;
		RESOLVER_INVALID_BOOL: (name: string) => string;
		RESOLVER_INVALID_CHANNEL: (name: string) => string;
		RESOLVER_INVALID_CUSTOM: (name: string, type: string) => string;
		RESOLVER_INVALID_DATE: (name: string) => string;
		RESOLVER_INVALID_DURATION: (name: string) => string;
		RESOLVER_INVALID_EMOJI: (name: string) => string;
		RESOLVER_INVALID_FLOAT: (name: number) => string;
		RESOLVER_INVALID_GUILD: (name: string) => string;
		RESOLVER_INVALID_INT: (name: number) => string;
		RESOLVER_INVALID_LITERAL: (name: string) => string;
		RESOLVER_INVALID_MEMBER: (name: string) => string;
		RESOLVER_INVALID_MESSAGE: (name: string) => string;
		RESOLVER_INVALID_PIECE: (name: string, piece: string) => string;
		RESOLVER_INVALID_REGEX_MATCH: (name: string, pattern: string) => string;
		RESOLVER_INVALID_ROLE: (name: string) => string;
		RESOLVER_INVALID_STRING: (name: string) => string;
		RESOLVER_INVALID_TIME: (name: string) => string;
		RESOLVER_INVALID_URL: (name: string) => string;
		RESOLVER_INVALID_USER: (name: string) => string;
		RESOLVER_STRING_SUFFIX: string;
		RESOLVER_MINMAX_EXACTLY: (name: string, min: number, suffix: string) => string;
		RESOLVER_MINMAX_BOTH: (name: string, min: number, max: number, suffix: string) => string;
		RESOLVER_MINMAX_MIN: (name: string, min: number, suffix: string) => string;
		RESOLVER_MINMAX_MAX: (name: string, max: number, suffix: string) => string;
		REACTIONHANDLER_PROMPT: string;
		COMMANDMESSAGE_MISSING: string;
		COMMANDMESSAGE_MISSING_REQUIRED: (name: string) => string;
		COMMANDMESSAGE_MISSING_OPTIONALS: (possibles: string) => string;
		COMMANDMESSAGE_NOMATCH: (possibles: string) => string;
		MONITOR_COMMAND_HANDLER_REPROMPT: (tag: string, name: string, time: number, abortOptions: string[]) => string;
		MONITOR_COMMAND_HANDLER_REPEATING_REPROMPT: (tag: string, name: string, time: number, cancelOptions: string[]) => string;
		MONITOR_COMMAND_HANDLER_ABORTED: string;
		INHIBITOR_COOLDOWN: (remainng: number, guildCooldown: boolean) => string;
		INHIBITOR_DISABLED_GUILD: string;
		INHIBITOR_DISABLED_GLOBAL: string;
		INHIBITOR_MISSING_BOT_PERMS: (missing: string) => string;
		INHIBITOR_NSFW: string;
		INHIBITOR_PERMISSIONS: string;
		INHIBITOR_REQUIRED_SETTINGS: (settings: string[]) => string;
		INHIBITOR_RUNIN: (types: string) => string;
		INHIBITOR_RUNIN_NONE: (name: string) => string;
		COMMAND_BLACKLIST_DESCRIPTION: string;
		COMMAND_BLACKLIST_SUCCESS: (usersAdded: string[], usersRemoved: string[], guildsAdded: string[], guildsRemoved: string[]) => string;
		COMMAND_EVAL_DESCRIPTION: string;
		COMMAND_EVAL_EXTENDEDHELP: string;
		COMMAND_EVAL_ERROR: (time: string, output: string, type: string) => string;
		COMMAND_EVAL_OUTPUT: (time: string, output: string, type: string) => string;
		COMMAND_EVAL_SENDFILE: (time: string, type: string) => string;
		COMMAND_EVAL_SENDCONSOLE: (time: string, type: string) => string;
		COMMAND_UNLOAD: (type: string, name: string) => string;
		COMMAND_UNLOAD_DESCRIPTION: string;
		COMMAND_UNLOAD_WARN: string;
		COMMAND_TRANSFER_ERROR: string;
		COMMAND_TRANSFER_SUCCESS: (type: string, name: string) => string;
		COMMAND_TRANSFER_FAILED: (type: string, name: string) => string;
		COMMAND_TRANSFER_DESCRIPTION: string;
		COMMAND_RELOAD: (type: string, name: string, time: string) => string;
		COMMAND_RELOAD_FAILED: (type: string, name: string) => string;
		COMMAND_RELOAD_ALL: (type: string, time: string) => string;
		COMMAND_RELOAD_EVERYTHING: (time: string) => string;
		COMMAND_RELOAD_DESCRIPTION: string;
		COMMAND_REBOOT: string;
		COMMAND_REBOOT_DESCRIPTION: string;
		COMMAND_LOAD: (time: string, type: string, name: string) => string;
		COMMAND_LOAD_FAIL: string;
		COMMAND_LOAD_ERROR: (type: string, name: string, error: string) => string;
		COMMAND_LOAD_DESCRIPTION: string;
		COMMAND_PING: string;
		COMMAND_PING_DESCRIPTION: string;
		COMMAND_PINGPONG: (diff: number, ping: number) => string;
		COMMAND_INVITE: () => string[];
		COMMAND_INVITE_DESCRIPTION: string;
		COMMAND_INFO: string[];
		COMMAND_INFO_DESCRIPTION: string;
		COMMAND_HELP_DESCRIPTION: string;
		COMMAND_HELP_DATA: {
			TITLE: (description: string) => string;
			USAGE: (usage: string) => string;
			EXTENDED: (extendedHelp: string) => string;
			FOOTER: (name: string) => string;
		};
		COMMAND_HELP_BEGINNING: (prefix: string) => string;
		COMMAND_HELP_NO_EXTENDED: string;
		COMMAND_HELP_DM: string;
		COMMAND_HELP_NODM: string;
		COMMAND_HELP_USAGE: (usage: string) => string;
		COMMAND_HELP_EXTENDED: string;
		COMMAND_ENABLE: (type: string, name: string) => string;
		COMMAND_ENABLE_DESCRIPTION: string;
		COMMAND_DISABLE: (type: string, name: string) => string;
		COMMAND_DISABLE_DESCRIPTION: string;
		COMMAND_DISABLE_WARN: string;
		COMMAND_CONF_NOKEY: string;
		COMMAND_CONF_NOVALUE: string;
		COMMAND_CONF_GUARDED: (name: string) => string;
		COMMAND_CONF_UPDATED: (key: string, response: string) => string;
		COMMAND_CONF_KEY_NOT_ARRAY: string;
		COMMAND_CONF_GET_NOEXT: (key: string) => string;
		COMMAND_CONF_GET: (key: string, value: string) => string;
		COMMAND_CONF_RESET: (key: string, response: string) => string;
		COMMAND_CONF_NOCHANGE: (key: string) => string;
		COMMAND_CONF_SERVER_DESCRIPTION: string;
		COMMAND_CONF_SERVER_EXTENDED: string;
		COMMAND_CONF_SERVER: (key: string, list: string) => string;
		COMMAND_CONF_USER_DESCRIPTION: string;
		COMMAND_CONF_USER_EXTENDED: string;
		COMMAND_CONF_USER: (key: string, list: string) => string;
		COMMAND_STATS: (memUsage: number, uptime: string, users: number, guilds: number, channels: number, klasaVersion: string, discordVersion: string, processVersion: string) => string[];
		COMMAND_STATS_DESCRIPTION: string;
		COMMAND_STATS_EXTENDED: string;
		COMMAND_STATS_EMBED: {
			FIELD_TITLES: {
				MEMORY_USAGE: string;
				UPTIME: string;
				USERS: string;
				GUILDS: string;
				CHANNELS: string;
				KLASA: string;
				DISCORDJS: string;
				NODE: string;
			};
			FOOTER: string;
			TITLE: string;
		};
		MESSAGE_PROMPT_TIMEOUT: string;
		TEXT_PROMPT_ABORT_OPTIONS: string[];
		USER_NOT_IN_GUILD: (user: string) => string;
		NONE: string;
		NO_PARENT_CATEGORY: string;
		ARGUMENT_ROLENAME_COULDNOTFIND: (name: string, arg: string) => string;
		ARGUMENT_ROLENAME_MULTIPLEMATCHES: (matches: string, name: string) => string;
		ARGUMENT_TIMESPAN_INVALID: (arg: string) => string;
		ARGUMENT_USERNAME_CANNOTFIND: (search: string) => string;
		ARGUMENT_USERNAME_MULTIPLE: (users: string) => string;
		COMMAND_LYRICS_DESCRIPTION: string;
		COMMAND_LYRICS_EXTENDED: string;
		COMMAND_LYRICS_EMBED: {
			TITLE: string;
		};
		COMMAND_LYRICS_NOLYRICS: string;
		COMMAND_CHOOSE_DESCRIPTION: string;
		COMMAND_CHOOSE_EXTENDED: string;
		COMMAND_CHOOSE_RESPONSE: (choice: string) => string;
		COMMAND_CHOOSE_TOOFEW: string;
		COMMAND_RATE_DESCRIPTION: string;
		COMMAND_RATE_EXTENDED: string;
		COMMAND_RATE_RESPONSE: (thing: string, rating: number) => string;
		COMMAND_ROCKPAPERSCISSORS_DESCRIPTION: string;
		COMMAND_ROCKPAPERSCISSORS_EXTENDED: string;
		COMMAND_ROCKPAPERSCISSORS_WINNER: (playerMove: string, steveMove: string, winner: number) => string;
		COMMAND_ROLL_DESCRIPTION: string;
		COMMAND_ROLL_EXTENDED: string;
		COMMAND_AUDINO_DESCRIPTION: string;
		COMMAND_AUDINO_EXTENDED: string;
		COMMAND_AUDINO_ID: string;
		COMMAND_F_DESCRIPTION: string;
		COMMAND_F_EXTENDED: string;
		COMMAND_F_ID: string;
		COMMAND_8BALL_DESCRIPTION: string;
		COMMAND_8BALL_EXTENDED: string;
		COMMAND_8BALL_RESPONSES: string[];
		COMMAND_DFTBA_DESCRIPTION: string;
		COMMAND_DFTBA_EXTENDED: string;
		MODERATION_NODURATION: string;
		MODERATION_NOREASON: string;
		MODERATION_NOSTEVE: string;
		MODERATION_NOSELF: string;
		MODERATION_HIGHERROLE: (user: string) => string;
		MODERATION_CASE_DISPLAY_FIELD_TARGET: string;
		MODERATION_CASE_DISPLAY_FIELD_MODERATOR: string;
		MODERATION_CASE_DISPLAY_FIELD_DURATION: string;
		MODERATION_CASE_DISPLAY_FIELD_REASON: string;
		MODERATION_CASE_DISPLAY_FOOTER: (caseNumber: number, targetID: string) => string;
		MODERATION_CASE_DISPLAY_TIME_REMAINING: (time: string) => string;
		COMMAND_MUTE_DESCRIPTION: string;
		COMMAND_MUTE_EXTENDED: string;
		COMMAND_MUTE_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_MUTE_UNABLE: (target: string) => string;
		COMMAND_DEAFEN_DESCRIPTION: string;
		COMMAND_DEAFEN_EXTENDED: string;
		COMMAND_DEAFEN_UNABLE: (target: string) => string;
		COMMAND_DEAFEN_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_BAN_DESCRIPTION: string;
		COMMAND_BAN_EXTENDED: string;
		COMMAND_BAN_UNABLE: (target: string) => string;
		COMMAND_BAN_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_KICK_DESCRIPTION: string;
		COMMAND_KICK_EXTENDED: string;
		COMMAND_KICK_UNABLE: (target: string) => string;
		COMMAND_KICK_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_UNBAN_DESCRIPTION: string;
		COMMAND_UNBAN_EXTENDED: string;
		COMMAND_UNBAN_UNABLE: (target: string) => string;
		COMMAND_UNBAN_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_UNMUTE_DESCRIPTION: string;
		COMMAND_UNMUTE_EXTENDED: string;
		COMMAND_UNMUTE_UNABLE: (target: string) => string;
		COMMAND_UNMUTE_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_UNDEAFEN_DESCRIPTION: string;
		COMMAND_UNDEAFEN_EXTENDED: string;
		COMMAND_UNDEAFEN_UNABLE: (target: string) => string;
		COMMAND_UNDEAFEN_SUCCESS: (target: string, thisCase: ModerationCase) => string;
		COMMAND_PERMISSIONS_DESCRIPTION: string;
		COMMAND_PERMISSIONS_HAS_ALL: (user: string) => string;
		COMMAND_NICKNAME_DESCRIPTION: string;
		COMMAND_NICKNAME_EXTENDED: string;
		COMMAND_NICKNAME_SET: (user: string) => string;
		COMMAND_NICKNAME_CLEARED: (user: string) => string;
		COMMAND_ROLE_DESCRIPTION: string;
		COMMAND_ROLE_EXTENDED: string;
		COMMAND_ROLE_REMOVE: (roles: string) => string;
		COMMAND_ROLE_ADD: (roles: string) => string;
		COMMAND_LOCK_DESCRIPTION: string;
		COMMAND_LOCK_EXTENDED: string;
		COMMAND_LOCK_LOCKED: string;
		COMMAND_UNLOCK_DESCRIPTION: string;
		COMMAND_UNLOCK_EXTENDED: string;
		COMMAND_UNLOCK_UNLOCKED: string;
		COMMAND_SLOWMODE_DESCRIPTION: string;
		COMMAND_SLOWMODE_EXTENDED: string;
		COMMAND_SLOWMODE_RESET: string;
		COMMAND_SLOWMODE_SET: (duration: string) => string;
		COMMAND_PURGE_DESCRIPTION: string;
		COMMAND_PURGE_EXTENDED: string;
		COMMAND_PURGE_PURGED: (size: number) => string;
		COMMAND_SNIPPET_DESCRIPTION: string;
		COMMAND_SNIPPET_EXTENDED: string;
		COMMAND_SNIPPET_ADD: (name: string) => string;
		COMMAND_SNIPPET_EDIT: (name: string) => string;
		COMMAND_SNIPPET_REMOVE: (name: string) => string;
		COMMAND_SNIPPET_NOPERMISSION: string;
		COMMAND_SNIPPET_ALREADYEXISTS: (name: string) => string;
		COMMAND_SNIPPET_INVALID: (name: string) => string;
		COMMAND_SNIPPET_NOSNIPS: string;
		COMMAND_SNIPPET_RESET: string;
		COMMAND_REMIND_DESCRIPTION: string;
		COMMAND_REMIND_EXTENDED: string;
		RESOLVER_REMINDER_LENGTH: string;
		RESOLVER_REMINDER_INVALID: (arg: string | number) => string;
		COMMAND_REMIND_CREATED: (duration: string) => string;
		COMMAND_REMIND_CANCELED: (content: string) => string;
		COMMAND_REMIND_NOREMINDERS: string;
		COMMAND_REMINDER_DISPLAY_HIDDEN: string;
		COMMAND_REMIND_VIEW_EMBED: {
			TITLE: string;
		};
		COMMAND_POMODORO_DESCRIPTION: string;
		COMMAND_POMODORO_EXTENDED: string;
		COMMAND_POMODORO_UNDERCONSTRUCTION: string;
		COMMAND_ASSIGN_DESCRIPTION: string;
		COMMAND_ASSIGN_EXTENDED: string;
		COMMAND_ASSIGN_NOROLEPROVIDED: string;
		COMMAND_ASSIGN_NOTASSIGNABLE: (role: string) => string;
		COMMAND_ASSIGN_ROLE_ADD: (roles: string) => string;
		COMMAND_ASSIGN_ROLE_REMOVE: (roles: string) => string;
		COMMAND_ASSIGN_ROLE_NEEDTRUSTED: (role: string) => string;
		COMMAND_WHOIS_DESCRIPTION: string;
		COMMAND_WHOIS_EXTENDED: string;
		COMMAND_WHOIS_DATE: (duration: string, date: string) => string;
		COMMAND_WHOIS_JOINEDGUILD_HOURS: (hours: number, date: string) => string;
		COMMAND_WHOIS_EMBED: {
			FIELD_TITLES: {
				DISPLAY_NAME: string;
				ACCOUNT_CREATED: string;
				JOINED_GUILD: string;
				ROLES: string;
			};
			FOOTER: (id: string) => string;
		};
		COMMAND_SERVERINFO_DESCRIPTION: string;
		COMMAND_SERVERINFO_EXTENDED: string;
		COMMAND_SERVERINFO_EMBED: {
			FIELD_TITLES: {
				TOTAL_MEMBERS: string;
				HUMANS: string;
				BOTS: string;
				TEXT_CHANNELS: string;
				VOICE_CHANNELS: string;
				ROLES: string;
				EMOJIS: string;
				MEMBERS_WITH_ROLES: string;
			};
			FOOTER: (date: string, duration: string) => string;
		};
		COMMAND_ROLEINFO_DESCRIPTION: string;
		COMMAND_ROLEINFO_EXTENDED: string;
		COMMAND_ROLEINFO_RESTRICTED: string;
		COMMAND_ROLEINFO_NOMEMBERS: string;
		COMMAND_ROLEINFO_TOOMANY: string;
		COMMAND_ROLEINFO_EMBED: {
			DESCRIPTION: (role: string, date: string) => string;
			FOOTER: (assignable: boolean) => string;
		};
		COMMAND_SETMEMBERLOG_DESCRIPTION: string;
		COMMAND_SETMEMBERLOG_EXTENDED: string;
		COMMAND_SETMEMBERLOG_SET: (channel: string) => string;
		COMMAND_SETSERVERLOG_DESCRIPTION: string;
		COMMAND_SETSERVERLOG_EXTENDED: string;
		COMMAND_SETSERVERLOG_SET: (channel: string) => string;
		COMMAND_SETREMINDERCHANNEL_DESCRIPTION: string;
		COMMAND_SETREMINDERCHANNEL_EXTENDED: string;
		COMMAND_SETREMINDERCHANNEL_SET: (channel: string) => string;
		COMMAND_SETADMINISTRATORROLE_DESCRIPTION: string;
		COMMAND_SETADMINISTRATORROLE_EXTENDED: string;
		COMMAND_SETADMINISTRATORROLE_SET: (role: string) => string;
		COMMAND_SETMODERATORROLE_DESCRIPTION: string;
		COMMAND_SETMODERATORROLE_EXTENDED: string;
		COMMAND_SETMODERATORROLE_SET: (role: string) => string;
		COMMAND_SETTRUSTEDROLE_DESCRIPTION: string;
		COMMAND_SETTRUSTEDROLE_EXTENDED: string;
		COMMAND_SETTRUSTEDROLE_SET: (role: string) => string;
		COMMAND_SETMUTEDROLE_DESCRIPTION: string;
		COMMAND_SETMUTEDROLE_EXTENDED: string;
		COMMAND_SETMUTEDROLE_SET: (role: string) => string;
		COMMAND_SETDEAFENEDROLE_DESCRIPTION: string;
		COMMAND_SETDEAFENEDROLE_EXTENDED: string;
		COMMAND_SETDEAFENEDROLE_SET: (role: string) => string;
		COMMAND_SETBANDELETEDAYS_DESCRIPTION: string;
		COMMAND_SETBANDELETEDAYS_EXTENDED: string;
		COMMAND_SETBANDELETEDAYS_SET: (days: number) => string;
		COMMAND_MANAGERESTRICTEDROLES_DESCRIPTION: string;
		COMMAND_MANAGERESTRICTEDROLES_EXTENDED: string;
		COMMAND_MANAGERESTRICTEDROLES_MANAGE_REMOVED: (removedRoles: string) => string;
		COMMAND_MANAGERESTRICTEDROLES_MANAGE_ADDED: (addedRoles: string) => string;
		COMMAND_MANAGERESTRICTEDROLES_RESET: string;
		COMMAND_MANAGERESTRICTEDROLES_SHOW_NOROLES: string;
		COMMAND_MANAGERESTRICTEDROLES_SHOW_ROLENOTFOUND: string;
		COMMAND_MANAGEASSIGNABLEROLES_DESCRIPTION: string;
		COMMAND_MANAGEASSIGNABLEROLES_EXTENDED: string;
		COMMAND_MANAGEASSIGNABLEROLES_MANAGE_REMOVED: (removedRoles: string) => string;
		COMMAND_MANAGEASSIGNABLEROLES_MANAGE_ADDED: (addedRoles: string) => string;
		COMMAND_MANAGEASSIGNABLEROLES_RESET: string;
		COMMAND_MANAGEASSIGNABLEROLES_SHOW_NOROLES: string;
		COMMAND_MANAGEASSIGNABLEROLES_SHOW_ROLENOTFOUND: string;
		COMMAND_MANAGEWORDBLACKLIST_DESCRIPTION: string;
		COMMAND_MANAGEWORDBLACKLIST_EXTENDED: string;
		COMMAND_MANAGEWORDBLACKLIST_ENABLED: string;
		COMMAND_MANAGEWORDBLACKLIST_DISABLED: string;
		COMMAND_MANAGEWORDBLACKLIST_RESET: string;
		COMMAND_MANAGEWORDBLACKLIST_UPDATE: (removing: boolean) => string;
		COMMAND_TOGGLETRUSTEDROLEREQUIREMENT_DESCRIPTION: string;
		COMMAND_TOGGLETRUSTEDROLEREQUIREMENT_EXTENDED: string;
		COMMAND_TOGGLETRUSTEDROLEREQUIREMENT_DISABLE: string;
		COMMAND_TOGGLETRUSTEDROLEREQUIREMENT_ENABLE: string;
		COMMAND_SETEMBEDCOLOR_DESCRIPTION: string;
		COMMAND_SETEMBEDCOLOR_EXTENDED: string;
		RESOLVER_INVALID_COLOR: (hex: string) => string;
		COMMAND_SETEMBEDCOLOR_RESET: string;
		COMMAND_SETEMBEDCOLOR_SHOW: (hex: string) => string;
		COMMAND_SETEMBEDCOLOR_SHOW_NONE: string;
		COMMAND_SETEMBEDCOLOR_SET: (hex: string) => string;
		COMMAND_FEEDBACK_DESCRIPTION: string;
		COMMAND_FEEDBACK_EXTENDED: string;
		COMMAND_FEEDBACK_NO_GUILD: string;
		COMMAND_FEEDBACK_NO_CHANNEL: string;
		COMMAND_FEEDBACK_SENT: string;
		COMMAND_TOGGLECHANNELCREATE_DESCRIPTION: string;
		COMMAND_TOGGLECHANNELCREATE: (disabled: boolean) => string;
		COMMAND_TOGGLECHANNELDELETE_DESCRIPTION: string;
		COMMAND_TOGGLECHANNELDELETE: (disabled: boolean) => string;
		COMMAND_TOGGLECHANNELUPDATE_DESCRIPTION: string;
		COMMAND_TOGGLECHANNELUPDATE_EXTENDED: string;
		COMMAND_TOGGLECHANNELUPDATE: (disabled: boolean) => string;
		COMMAND_TOGGLEEMOJICREATE_DESCRIPTION: string;
		COMMAND_TOGGLEEMOJICREATE: (disabled: boolean) => string;
		COMMAND_TOGGLEEMOJIDELETE_DESCRIPTION: string;
		COMMAND_TOGGLEEMOJIDELETE: (disabled: boolean) => string;
		COMMAND_TOGGLEEMOJIUPDATE_DESCRIPTION: string;
		COMMAND_TOGGLEEMOJIUPDATE_EXTENDED: string;
		COMMAND_TOGGLEEMOJIUPDATE: (disabled: boolean) => string;
		COMMAND_TOGGLEGUILDBANADD_DESCRIPTION: string;
		COMMAND_TOGGLEGUILDBANADD: (disabled: boolean) => string;
		COMMAND_TOGGLEGUILDBANREMOVE_DESCRIPTION: string;
		COMMAND_TOGGLEGUILDBANREMOVE: (disabled: boolean) => string;
		COMMAND_TOGGLEGUILDMEMBERADD_DESCRIPTION: string;
		COMMAND_TOGGLEGUILDMEMBERADD: (disabled: boolean) => string;
		COMMAND_TOGGLEGUILDMEMBERREMOVE_DESCRIPTION: string;
		COMMAND_TOGGLEGUILDMEMBERREMOVE: (disabled: boolean) => string;
		COMMAND_TOGGLEGUILDMEMBERUPDATE_DESCRIPTION: string;
		COMMAND_TOGGLEGUILDMEMBERUPDATE_EXTENDED: string;
		COMMAND_TOGGLEGUILDMEMBERUPDATE: (disabled: boolean) => string;
		COMMAND_TOGGLEINVITECREATE_DESCRIPTION: string;
		COMMAND_TOGGLEINVITECREATE: (disabled: boolean) => string;
		COMMAND_TOGGLEINVITEDELETE_DESCRIPTION: string;
		COMMAND_TOGGLEINVITEDELETE: (disabled: boolean) => string;
		COMMAND_TOGGLEMESSAGEDELETE_DESCRIPTION: string;
		COMMAND_TOGGLEMESSAGEDELETE: (disabled: boolean) => string;
		COMMAND_TOGGLEMESSAGEDELETEBULK_DESCRIPTION: string;
		COMMAND_TOGGLEMESSAGEDELETEBULK: (disabled: boolean) => string;
		COMMAND_TOGGLEROLECREATE_DESCRIPTION: string;
		COMMAND_TOGGLEROLECREATE: (disabled: boolean) => string;
		COMMAND_TOGGLEROLEDELETE_DESCRIPTION: string;
		COMMAND_TOGGLEROLEDELETE: (disabled: boolean) => string;
		COMMAND_TOGGLEROLEUPDATE_DESCRIPTION: string;
		COMMAND_TOGGLEROLEUPDATE_EXTENDED: string;
		COMMAND_TOGGLEROLEUPDATE: (disabled: boolean) => string;
		EVENT_CHANNELCREATE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (type: string, name: string) => string;
		};
		EVENT_CHANNELDELETE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (type: string, name: string) => string;
		};
		EVENT_CHANNELUPDATE_NAMECHANGE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (oldName: string, newName: string, type: string) => string;
		};
		EVENT_EMOJICREATE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (name: string) => string;
		};
		EVENT_EMOJIDELETE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (name: string) => string;
		};
		EVENT_EMOJIUPDATE_NAMECHANGE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (oldName: string, newName: string, animated: boolean) => string;
		};
		EVENT_ROLECREATE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (name: string) => string;
		};
		EVENT_ROLEDELETE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (name: string) => string;
		};
		EVENT_ROLEUPDATE_NAMECHANGE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (oldName: string, newName: string) => string;
		};
		EVENT_GUILDMEMBERADD_EMBED: {
			FIELD_TITLES: {
				BOT: (executor: string) => string;
				HUMAN: string;
			};
			FIELD_VALUES: {
				ACCOUNT_AGE: (duration: string) => string;
			};
			FOOTER: (id: string) => string;
		};
		EVENT_GUILDMEMBERREMOVE_EMBED: {
			FIELD_TITLES: {
				JOIN_DATE: (bot: boolean) => string;
				ROLES: string;
			};
			FIELD_VALUES: {
				JOIN_DATE: (duration: string) => string;
			};
			FOOTER: (id: string) => string;
		};
		EVENT_GUILDMEMBERUPDATE_ROLEUPDATE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (type: string, role: string, executor: string) => string;
		};
		EVENT_GUILDMEMBERUPDATE_ROLEUPDATE_REMOVEDFROM: string;
		EVENT_GUILDMEMBERUPDATE_ROLEUPDATE_ADDEDTO: string;
		EVENT_GUILDMEMBERUPDATE_DISPLAYNAMECHANGE_EMBED: {
			FIELD_TITLES: {
				NEW_DISPLAY_NAME: string;
			};
			FOOTER: (id: string) => string;
		};
		EVENT_INVITECREATE_EMBED: {
			FOOTER: (code: string) => string;
			TITLE: (channel: string) => string;
		};
		EVENT_INVITEDELETE_EMBED: {
			FOOTER: (code: string) => string;
			TITLE: (channel: string) => string;
		};
		EVENT_MESSAGEDELETE_UNABLE_TO_DISPLAY: string;
		EVENT_MESSAGEDELETE_EMBED: {
			FIELD_TITLES: {
				CHANNEL: (name: string, parent: string) => string;
			};
			FOOTER: (id: string, time: string) => string;
		};
		EVENT_MESSAGEDELETEBULK_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (size: number, name: string, parent: string) => string;
		};
		EVENT_GUILDBANADD_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (executor: string) => string;
		};
		EVENT_GUILDBANREMOVE_EMBED: {
			FOOTER: (id: string) => string;
			TITLE: (executor: string) => string;
		};
		MONITOR_MENTIONSPAM_MAX: (maxMentions: number) => string;
		MONITOR_WORDBLACKLIST_FILTERED: string;
		INHIBITOR_PINGPROTECTION_ROLEPING: string;
		INHIBITOR_PINGPROTECTION_EVERYONE: string;
	}
}
